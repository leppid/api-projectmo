services:
  db:
    container_name: mo_db
    image: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    networks:
      - mo_network
    volumes:
      - db_data:/var/lib/postgresql/data
  redis:
    container_name: mo_redis
    image: redis
    networks:
      - mo_network
    restart: always
  api:
    container_name: mo_api
    build:
      context: .
      dockerfile: docker/development/Dockerfile.api
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    networks:
      - mo_network
    volumes:
      - ./:/api
    tty: true
    stdin_open: true
  session:
    container_name: mo_session
    build:
      context: .
      dockerfile: docker/development/Dockerfile.session
    env_file:
      - .env
    ports:
      - "3001:3001"
    depends_on:
      - api
    networks:
      - mo_network
    volumes:
      - ./direct_servers:/direct_servers
  movement:
    container_name: mo_movement
    build:
      context: .
      dockerfile: docker/development/Dockerfile.movement
    env_file:
      - .env
    ports:
      - "3002:3002"
    depends_on:
      - session
    networks:
      - mo_network
    volumes:
      - ./direct_servers:/direct_servers
networks:
  mo_network:
   name: 'mo_network'
volumes:
  db_data: